cd /var/lib/boinc

PROJECT_NAME="$1"
PROJECT_URL="$2"
PROJECT_GENERAL_AREA="$3"
PROJECT_SPECIFIC_AREA="$4"
PROJECT_DESCRIPTION="$5"
PROJECT_IMAGE="$6"
PROJECT_SUMMARY="$7"
PROJECT_HOME="$8"

if [[ "$#" == "0" ]]; then
	echo "add_host PROJECT_NAME PROJECT_URL PROJECT_GENERAL_AREA PROJECT_SPECIFIC_AREA PROJECT_DESCRIPTION PROJECT_IMAGE PROJECT_SUMMARY PROJECT_HOME ..."
	echo ""
	echo "Example:"
	echo '  add_host "Boinc BFGMiner" "http://127.0.0.1/boinc_bfgminer" "Mathematics, computing, and games" "Bitcoin Mining" "The Boinc BFGMiner app mines bitcoins." "http://127.0.0.1/none.jpg" "Bitcoin Miner" "Private" i686-pc-linux-gnu x86_64-pc-linux-gnu[opencl_ati5_cat132]'
	echo ""
	echo "Possible values for PROJECT_GENERAL_AREA:"
	echo ""
	grep -r -e "general_area" all_projects_list.xml | sed -E "s|<general_area>([a-zA-Z ,-]*)</general_area>|\1|g" | uniq
	echo ""
	echo "Possible values for PROJECT_SPECIFIC_AREA:"
	echo ""
	grep -r -e "specific_area" all_projects_list.xml | sed -E "s|<specific_area>([a-zA-Z ,-]*)</specific_area>|\1|g" | uniq
	echo "        OR YOUR OWN CUSTOM VALUE"
	echo ""
	echo "Possible values for ... (PLATFORMS)"
	xml sel -t -v "//platforms/name[text()]" all_projects_list.xml | sort | uniq
        exit
fi

xml sel -t -v "//name[text()='${PROJECT_NAME}']" all_projects_list.xml &>/dev/null
if [[ "$?" == "0" ]]; then
	echo "Deleting ${PROJECT_NAME}.  Starting all over..."
	xml ed -L -d "//project/name[text()='${PROJECT_NAME}']/.." all_projects_list.xml
fi

xml ed -s "/projects" -t elem -n "project" all_projects_list.xml \
  | xml ed -s "/projects/project[last()]" -t elem -name "name" -v "${PROJECT_NAME}" \
  | xml ed -s "/projects/project[last()]" -t elem -name "url" -v "${PROJECT_URL}" \
  | xml ed -s "/projects/project[last()]" -t elem -name "platforms" \
  | xml ed -s "/projects/project[last()]" -t elem -n "general_area" -v "${PROJECT_GENERAL_AREA}" \
  | xml ed -s "/projects/project[last()]" -t elem -name "specific_area" -v "${PROJECT_SPECIFIC_AREA}" \
  | xml ed -s "/projects/project[last()]"  -t elem -name "description" \
  | xml ed -s "/projects/project[last()]/description"  -t text -name "" -v '<![CDATA[' \
    | xml ed -a "/projects/project[last()]/description/text()"  -t text -name "" -v "${PROJECT_DESCRIPTION}]]>" \
  | xml ed -s "/projects/project[last()]" -t elem -n "image" -v "${PROJECT_IMAGE}" \
  | xml ed -s "/projects/project[last()]" -t elem -n "summary" -v "${PROJECT_SUMMARY}"  \
  | xml ed -s "/projects/project[last()]" -t elem -n "home" -v "${PROJECT_HOME}" | xml unesc > all_projects_list.xml.tmp
cp all_projects_list.xml.tmp all_projects_list.xml

shift
shift
shift
shift
shift
shift
shift
shift

while [[ "${#1}" != "0" ]]
do
	xml ed -L -s "/projects/project[last()]/platforms" -t elem -name "name" -v "$1" all_projects_list.xml
	shift
done

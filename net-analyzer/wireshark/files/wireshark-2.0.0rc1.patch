--- wireshark-2.0.0rc1.orig/epan/dissectors/packet-usb-ptp.c	2015-10-27 18:44:24.209841801 -0700
+++ wireshark-2.0.0rc1/epan/dissectors/packet-usb-ptp.c	2015-10-27 20:12:21.245848861 -0700
@@ -120,6 +120,12 @@
 static expert_field ei_mtpz_drm_app_enable_write_operations  = EI_INIT;
 static expert_field ei_mtpz_drm_app_disable_write_operations = EI_INIT;
 
+/* Generated from convert_proto_tree_add_text.pl */
+static int hf_usb_ptp_objects_1 = -1;
+static int hf_usb_ptp_objects_2 = -1;
+static int hf_usb_ptp_device_information = -1;
+static int hf_usb_ptp_parameters = -1;
+
 static reassembly_table msg_reassembled_table;
 static gint ett_msg_fragment = -1;
 static gint ett_msg_fragments = -1;
@@ -310,7 +316,8 @@
     /* Create Device Info Tree */
     if (parent_tree)
     {
-        ti = proto_tree_add_text(parent_tree, tvb, offset, ( (4*length)+4), "Objects");
+        /* Generated from convert_proto_tree_add_text.pl */
+        ti = proto_tree_add_item(parent_tree, hf_usb_ptp_objects_1, tvb, offset, ( (4*length)+4), ENC_LITTLE_ENDIAN);
         tree = proto_item_add_subtree(ti, ett_usb_ptp_object_array);
     }
 
@@ -345,7 +352,8 @@
     /* Create Device Info Tree */
     if (parent_tree)
     {
-        ti = proto_tree_add_text(parent_tree, tvb, offset, ( (2*length)+4), "Objects");
+        /* Generated from convert_proto_tree_add_text.pl */
+        ti = proto_tree_add_item(parent_tree, hf_usb_ptp_objects_2, tvb, offset, ( (2*length)+4), ENC_LITTLE_ENDIAN);
         tree = proto_item_add_subtree(ti, ett_usb_ptp_object_array);
     }
 
@@ -385,7 +393,8 @@
     if (parent_tree)
     {
         proto_item *ti = NULL;
-        ti = proto_tree_add_text(parent_tree, tvb, offset, -1, "DEVICE INFORMATION");
+        /* Generated from convert_proto_tree_add_text.pl */
+        ti = proto_tree_add_item(parent_tree, hf_usb_ptp_device_information, tvb, offset, -1, ENC_LITTLE_ENDIAN);
         tree = proto_item_add_subtree(ti, ett_usb_ptp_device_info);
     }
 
@@ -440,7 +449,8 @@
     if (parent_tree)
     {
         proto_item *ti = NULL;
-        ti = proto_tree_add_text(parent_tree, tvb, offset, remaining, "PARAMETERS");
+        /* Generated from convert_proto_tree_add_text.pl */
+        ti = proto_tree_add_item(parent_tree, hf_usb_ptp_parameters, tvb, offset, remaining, ENC_LITTLE_ENDIAN);
         tree = proto_item_add_subtree(ti, ett_usb_ptp_parameters);
     }
 
@@ -917,6 +927,11 @@
         { &hf_msg_reassembled_length                          , 
 		{ "Reassembled usb-ptp length"                        , "usb-ptp.msg.reassembled.length"        , FT_UINT32  , BASE_DEC  , 
 		NULL                                                  , 0x0                                     , NULL       , HFILL}}   ,
+        /* Generated from convert_proto_tree_add_text.pl */
+        { &hf_usb_ptp_objects_1, { "Objects", "usb_ptp.objects", FT_UINT32, FT_UINT32, NULL, 0x0, NULL, HFILL }},
+        { &hf_usb_ptp_objects_2, { "Objects", "usb_ptp.objects", FT_UINT16, FT_UINT16, NULL, 0x0, NULL, HFILL }},
+        { &hf_usb_ptp_device_information, { "DEVICE INFORMATION", "usb_ptp.device_information", FT_BYTES, BASE_NONE, NULL, 0x0, NULL, HFILL }},
+        { &hf_usb_ptp_parameters, { "PARAMETERS", "usb_ptp.parameters", FT_BYTES, BASE_NONE, NULL, 0x0, NULL, HFILL }},
         };
 
     static gint *usb_ptp_subtrees[] = {

diff -urp ycmd-c3e6904f436463f7fdb3aed5055552e893774009.orig/ycmd/completers/cs/cs_completer.py ycmd-c3e6904f436463f7fdb3aed5055552e893774009/ycmd/completers/cs/cs_completer.py
--- ycmd-c3e6904f436463f7fdb3aed5055552e893774009.orig/ycmd/completers/cs/cs_completer.py	2017-01-28 14:46:03.687754243 -0800
+++ ycmd-c3e6904f436463f7fdb3aed5055552e893774009/ycmd/completers/cs/cs_completer.py	2017-01-28 14:48:48.406642116 -0800
@@ -397,7 +397,7 @@ class CsharpSolutionCompleter( object ):
   def _TryToStopServer( self ):
     for _ in range( 5 ):
       try:
-        self._GetResponse( '/stopserver', timeout = .1 )
+        self._GetResponse( '/stopserver', timeout = .1, returns_json = False )
       except:
         pass
       for _ in range( 10 ):
@@ -426,7 +426,8 @@ class CsharpSolutionCompleter( object ):
   def _ReloadSolution( self ):
     """ Reloads the solutions in the OmniSharp server """
     self._logger.info( 'Reloading Solution in OmniSharp server' )
-    return self._GetResponse( '/reloadsolution' )
+    self._GetResponse( '/reloadsolution', returns_json = False )
+    return True
 
 
   def CompletionType( self, request_data ):
@@ -521,12 +522,12 @@ class CsharpSolutionCompleter( object ):
   def _DefaultParameters( self, request_data ):
     """ Some very common request parameters """
     parameters = {}
-    parameters[ 'line' ] = request_data[ 'line_num' ]
-    parameters[ 'column' ] = request_data[ 'column_num' ]
+    parameters[ 'Line' ] = request_data[ 'line_num' ]
+    parameters[ 'Column' ] = request_data[ 'column_num' ]
     filepath = request_data[ 'filepath' ]
-    parameters[ 'buffer' ] = (
+    parameters[ 'Buffer' ] = (
       request_data[ 'file_data' ][ filepath ][ 'contents' ] )
-    parameters[ 'filename' ] = filepath
+    parameters[ 'Filename' ] = filepath
     return parameters
 
 
@@ -568,11 +569,17 @@ class CsharpSolutionCompleter( object ):
     return 'http://localhost:' + str( self._omnisharp_port )
 
 
-  def _GetResponse( self, handler, parameters = {}, timeout = None ):
+  def _GetResponse( self, handler, parameters = {}, timeout = None,
+                    returns_json = True ):
     """ Handle communication with server """
     target = urllib.parse.urljoin( self._ServerLocation(), handler )
-    response = requests.post( target, data = parameters, timeout = timeout )
-    return response.json()
+    self._logger.info( "Request: " + str(parameters) )
+    response = requests.post( target, json = parameters, timeout = timeout )
+    self._logger.info( "Response: " + response.text )
+    if returns_json:
+      return response.json()
+    else:
+      return None
 
 
   def _ChooseOmnisharpPort( self ):
Only in ycmd-c3e6904f436463f7fdb3aed5055552e893774009/ycmd/completers/cs: cs_completer.py.orig
Only in ycmd-c3e6904f436463f7fdb3aed5055552e893774009/ycmd/completers/cs: cs_completer.py.rej

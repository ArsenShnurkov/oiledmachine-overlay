/* modifier 0 means no modifier */
static int surfuseragent    = 1;  /* Append Surf version to default WebKit user agent */
//static char *fulluseragent  = ""; /* Or override the whole user agent string */
static char *fulluseragent  = "Mozilla/5.0 (X11; Linux x86_64; rv:37.0) Gecko/20100101 Firefox/37.0"; //Force Facebook compatibility
static char *scriptfile     = "~/.surf/script.js";
static char *styledir       = "~/.surf/styles/";
static char *cachedir       = "~/.surf/cache/";
static char *cookiefile     = "~/.surf/cookies.txt";

/* Webkit default features */
static Parameter defconfig[ParameterLast] = {
	SETB(AcceleratedCanvas,  1),
	SETB(CaretBrowsing,      0),
	SETV(CookiePolicies,     "@Aa"),
	SETB(DiskCache,          1),
	SETB(DNSPrefetch,        0),
	SETI(FontSize,           12),
	SETB(FrameFlattening,    0),
	SETB(Geolocation,        0),
	SETB(HideBackground,     0),
	SETB(Inspector,          0),
	SETB(JavaScript,         1),
	SETB(KioskMode,          0),
	SETB(LoadImages,         1),
	SETB(MediaManualPlay,    0),
	SETB(Plugins,            1),
	SETV(PreferredLanguages, ((char *[]){ NULL })),
	SETB(RunInFullscreen,    0),
	SETB(ScrollBars,         1),
	SETB(ShowIndicators,     1),
	SETB(SiteQuirks,         1),
	SETB(SpellChecking,      0),
	SETV(SpellLanguages,     ((char *[]){ "en_US", NULL })),
	SETB(StrictSSL,          0),
	SETB(Style,              1),
	SETF(ZoomLevel,          1.0),
};

static UriParameters uriparams[] = {
	{ "(://|\\.)suckless\\.org(/|$)", {
	  FSETB(JavaScript, 0),
	  FSETB(Plugins,    0),
	}, },
};

static WebKitFindOptions findopts = WEBKIT_FIND_OPTIONS_CASE_INSENSITIVE |
                                    WEBKIT_FIND_OPTIONS_WRAP_AROUND;

#define SETPROP(p, q) { \
        .v = (const char *[]){ "/bin/sh", "-c", \
             "prop=\"`xprop -id $2 $0 " \
             "| sed \"s/^$0(STRING) = \\(\\\\\"\\?\\)\\(.*\\)\\1$/\\2/\" " \
             "| xargs -0 printf %b | dmenu`\" &&" \
             "xprop -id $2 -f $1 8s -set $1 \"$prop\"", \
             p, q, winid, NULL \
        } \
}

/* DOWNLOAD(URI, referer) */
#define DOWNLOAD(d, r) { \
        .v = (const char *[]){ "/bin/sh", "-c", \
             "st -e /bin/sh -c \"curl -g -L -J -O --user-agent '$1'" \
             " --referer '$2' -b $3 -c $3 '$0';" \
             " sleep 5;\"", \
             d, useragent, r, cookiefile, NULL \
        } \
}

/* PLUMB(URI) */
/* This called when some URI which does not begin with "about:",
 * "http://" or "https://" should be opened.
 */
#define PLUMB(u) {\
        .v = (const char *[]){ "/bin/sh", "-c", \
             "xdg-open \"$0\"", u, NULL \
        } \
}

/* VIDEOPLAY(URI) */
#define VIDEOPLAY(u) {\
        .v = (const char *[]){ "/bin/sh", "-c", \
             "mpv --really-quiet \"$0\"", u, NULL \
        } \
}

/* styles */
/*
 * The iteration will stop at the first match, beginning at the beginning of
 * the list.
 */
static SiteStyle styles[] = {
	/* regexp               file in $styledir */
	{ ".*",                 "default.css" },
};

#define BM_PICK { .v = (char *[]){ "/bin/sh", "-c", \
"xprop -id $0 -f _SURF_GO 8s -set _SURF_GO \
`cat ~/.surf/bookmarks | dmenu || exit 0`", \
winid, NULL } }

#define BM_ADD { .v = (char *[]){ "/bin/sh", "-c", \
"(echo `xprop -id $0 _SURF_URI | cut -d '\"' -f 2` && \
cat ~/.surf/bookmarks) | sort -u > ~/.surf/bookmarks_new && \
mv ~/.surf/bookmarks_new ~/.surf/bookmarks", \
winid, NULL } }

#define MODKEY GDK_CONTROL_MASK

/* hotkeys */
/*
 * If you use anything else but MODKEY and GDK_SHIFT_MASK, don't forget to
 * edit the CLEANMASK() macro.
 */
static Key keys[] = {
	/* modifier              keyval          function    arg */
	{ MODKEY,                GDK_KEY_g,      spawn,      SETPROP("_SURF_URI", "_SURF_GO") },
	{ MODKEY,                GDK_KEY_f,      spawn,      SETPROP("_SURF_FIND", "_SURF_FIND") },
	{ MODKEY,                GDK_KEY_slash,  spawn,      SETPROP("_SURF_FIND", "_SURF_FIND") },

	{ 0,                     GDK_KEY_Escape, stop,       { 0 } },
	{ MODKEY,                GDK_KEY_c,      stop,       { 0 } },

	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_r,      reload,     { .b = 1 } },
	{ MODKEY,                GDK_KEY_r,      reload,     { .b = 0 } },

	{ MODKEY,                GDK_KEY_l,      navigate,   { .i = +1 } },
	{ MODKEY,                GDK_KEY_h,      navigate,   { .i = -1 } },

	/* Currently we have to use scrolling steps that WebKit2GTK+ gives us
	 * d: step down, u: step up, r: step right, l:step left
	 * D: page down, U: page up */
	{ MODKEY,                GDK_KEY_j,      scroll,     { .i = 'd' } },
	{ MODKEY,                GDK_KEY_k,      scroll,     { .i = 'u' } },
	{ MODKEY,                GDK_KEY_b,      scroll,     { .i = 'U' } },
	{ MODKEY,                GDK_KEY_space,  scroll,     { .i = 'D' } },
	{ MODKEY,                GDK_KEY_i,      scroll,     { .i = 'r' } },
	{ MODKEY,                GDK_KEY_u,      scroll,     { .i = 'l' } },


	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_j,      zoom,       { .i = -1 } },
	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_k,      zoom,       { .i = +1 } },
	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_q,      zoom,       { .i = 0  } },
	{ MODKEY,                GDK_KEY_minus,  zoom,       { .i = -1 } },
	{ MODKEY,                GDK_KEY_plus,   zoom,       { .i = +1 } },

	{ MODKEY,                GDK_KEY_p,      clipboard,  { .b = 1 } },
	{ MODKEY,                GDK_KEY_y,      clipboard,  { .b = 0 } },

	{ MODKEY,                GDK_KEY_n,      find,       { .i = +1 } },
	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_n,      find,       { .i = -1 } },

	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_p,      print,      { 0 } },

	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_a,      togglecookiepolicy, { 0 } },
	{ 0,                     GDK_KEY_F11,    togglefullscreen, { 0 } },
	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_o,      toggleinspector, { 0 } },

	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_c,      toggle,     { .i = CaretBrowsing } },
	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_f,      toggle,     { .i = FrameFlattening } },
	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_g,      toggle,     { .i = Geolocation } },
	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_s,      toggle,     { .i = JavaScript } },
	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_i,      toggle,     { .i = LoadImages } },
	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_v,      toggle,     { .i = Plugins } },
	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_b,      toggle,     { .i = ScrollBars } },
	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_m,      toggle,     { .i = Style } },

	{ MODKEY,                GDK_KEY_b,      spawn,      BM_PICK },
	{ MODKEY|GDK_SHIFT_MASK, GDK_KEY_b,      spawn,      BM_ADD },
};

/* button definitions */
/* target can be OnDoc, OnLink, OnImg, OnMedia, OnEdit, OnBar, OnSel, OnAny */
static Button buttons[] = {
	/* target       event mask      button  function        argument        stop event */
	{ OnLink,       0,              2,      clicknewwindow, { .b = 0 },     1 },
	{ OnLink,       MODKEY,         2,      clicknewwindow, { .b = 1 },     1 },
	{ OnLink,       MODKEY,         1,      clicknewwindow, { .b = 1 },     1 },
	{ OnAny,        0,              8,      clicknavigate,  { .i = -1 },    1 },
	{ OnAny,        0,              9,      clicknavigate,  { .i = +1 },    1 },
	{ OnMedia,      MODKEY,         1,      clickexternplayer, { 0 },       1 },
};

/* Change this to your surf scripts directory. */
#define SCRIPTS_DIR "/etc/surf/scripts/"

/* Page load "handlers". */
#define PAGE_LOAD_COMMITTED(c) const Arg a = { .v = (char *[]){ "/bin/sh", "-c", \
       SCRIPTS_DIR "events/page_load_committed.sh \"$0\" \"$1\" \"$2\"", winid, geturi(c), c->title, NULL }}; spawn(NULL, &a)
#define PAGE_LOAD_FINISHED(c) const Arg b = { .v = (char *[]){ "/bin/sh", "-c", \
       SCRIPTS_DIR "events/page_load_finished.sh \"$0\" \"$1\" \"$2\"", winid, geturi(c), c->title, NULL }}; spawn(NULL, &b)

static SearchEngine searchengines[] = {
    { "g",  "http://www.google.com/search?q=%s"   },
    { "gi", "https://www.google.com/search?site=&tbm=isch&source=hp&biw=646&bih=852&q=%s&oq=%s&gs_l=img.3..0l10.2019.2385.0.2593.3.3.0.0.0.0.83.237.3.3.0.msedr...0...1ac.1.60.img..0.3.234.otV_zSWwPFk"   },
    { "gm", "https://maps.google.com/maps?q=%s"   },
    { "tw", "https://twitter.com/search?f=realtime&q=%s&src=typd" },
    { "twht", "https://twitter.com/hashtag/%s?src=hash" },
    { "fbht",  "https://www.facebook.com/hashtag/%s"   },
    { "ud", "http://www.urbandictionary.com/define.php?term=%s" },
    { "wiki", "https://en.wikipedia.org/wiki/%s" },
    { "yt", "https://www.youtube.com/results?search_query=%s" },
    { "wdb", "https://www.google.com/webhp?ie=utf-8&oe=utf-8&rls=org.mozilla:en-US:official&client=firefox-a&channel=nts#channel=nts&q=site:appdb.winehq.org+%s&rls=org.mozilla:en-US:official" },
    { "d", "http://www.thefreedictionary.com/%s" },
    { "coc", "http://clashofclans.wikia.com/wiki/%s" },
    { "lis", "https://www.linkedin.com/vsearch/f?keywords=%s&trk=profile-skill-section" },
    { "gb", "https://bugs.gentoo.org/buglist.cgi?quicksearch=%s" },
    { "at", "http://alternativeto.net/software/%s/" },
    { "oca", "https://openclipart.org/search/?query=%s" },
    { "oga", "http://opengameart.org/art-search?keys=%s" },
    { "fs", "https://www.freesound.org/search/?q=%s" },
    { "jam", "https://www.jamendo.com/en/search?qs=q=%s" },
    { "php", "http://php.net/results.php?q=%s&l=en&p=all" },
    { "py2", "https://docs.python.org/2.7/search.html?q=%s" },
    { "py3", "https://docs.python.org/3.3/search.html?q=%s" },
    { "c", "http://en.cppreference.com/mwiki/index.php?title=Special:Search&search=%s" },
    { "c++", "http://en.cppreference.com/mwiki/index.php?title=Special:Search&search=%s" },
    { "cpp", "http://en.cppreference.com/mwiki/index.php?title=Special:Search&search=%s" },
    { "j", "https://www.google.com/search?q=%s+site:docs.oracle.com/javase/8" },
    { "java", "https://www.google.com/search?q=%s+site:docs.oracle.com/javase/8" },
    { "j8", "https://www.google.com/search?q=%s+site:docs.oracle.com/javase/8" },
    { "j7", "https://www.google.com/search?q=%s+site:docs.oracle.com/javase/7" },
    { "as", "http://www.adobe.com/cfusion/search/index.cfm?cat=support&term=%s&loc=en_US&self=1&lr=en_US&site=communityhelp_platform_aslr" },
    { "mysql", "https://www.google.com/?gws_rd=ssl#q=%s+site:+dev.mysql.com/doc/refman/" },
    { "sqlite", "https://www.sqlite.org/search?q=%s" },
    { "jq", "http://api.jquery.com/?s=%s" },
    { "js", "https://www.google.com/?gws_rd=ssl#q=%s+site:dottoro.com" },
    { "css", "https://www.google.com/?gws_rd=ssl#q=%s+site:www.w3.org" },
    { "fbd", "https://www.google.com/search?q=%s+site:https://developers.facebook.com/docs/" },
    { "a", "http://developer.android.com/reference/packages.html#q=%s" },
    { "u", "http://docs.unity3d.com/ScriptReference/30_search.html?q=%s" },
    { "msdn", "https://social.msdn.microsoft.com/Search/en-US?query=%s&emptyWatermark=true&ac=4" },
    { "gnu", "https://www.gnu.org/cgi-bin/estseek.cgi?phrase=%s" },
    { "man", "http://www.die.net/search/?q=%s&sa=Search&ie=ISO-8859-1&cx=partner-pub-5823754184406795:54htp1rtx5u&cof=FORID:9" },
    { "glib", "https://developer.gnome.org/search?q=%s" },
    { "mono", "https://www.google.com/?gws_rd=ssl#q=%s%20site:http://docs.go-mono.com/" },
    { "gh", "https://github.com/search?utf8=%%E2%%9C%%93&q=%s" },
    { "so", "http://stackoverflow.com/search?q=%s" },
    { "help", "http://stackoverflow.com/search?q=%s" },
    { "ogl4", "https://www.google.com/?gws_rd=ssl#q=%s+site:https://www.opengl.org/sdk/docs/man/html/" },
    { "ogl2", "https://www.google.com/?gws_rd=ssl#q=%s+site:https://www.opengl.org/sdk/docs/man2" },
    { "dx", "https://www.google.com/search?q=%s+%%2Bdx11+%%2Bsite:msdn.microsoft.com" },
    { "dx11", "https://www.google.com/search?q=%s+%%2Bdx11+%%2Bsite:msdn.microsoft.com" },
    { "dx9", "https://www.google.com/search?q=%s+%%2Bdx9+%%2Bsite:msdn.microsoft.com" },
    { "physx", "https://www.google.com/?gws_rd=ssl#q=%s+site:http://docs.nvidia.com/gameworks/content/gameworkslibrary/physx/" },
    { "px", "https://www.google.com/?gws_rd=ssl#q=%s+site:http://docs.nvidia.com/gameworks/content/gameworkslibrary/physx/" },
    { "hlsl", "https://www.google.com/?gws_rd=ssl#q=%s+%%2BHLSL+site:msdn.microsoft.com" },
    { "glsl", "https://www.google.com/?gws_rd=ssl#q=sign+%%2B%%22OpenGL+Shading+Language+Version%%22+%%2Bsite:www.opengl.org/sdk/docs/man/html" },
    { "sdl", "http://wiki.libsdl.org/FrontPage?action=fullsearch&context=180&value=%s&titlesearch=Titles" },
    { "sfml", "https://www.google.com/?gws_rd=ssl#q=%s+site:http://www.sfml-dev.org/documentation/2.2/" },
    { "avrlibc", "https://www.google.com/search?q=%s+%%22AVR+Libc+Reference+Manual%%22+site:www.atmel.com" },
    { "glibc", "https://www.google.com/search?q=%s+%%2Bsite:www.gnu.org/s/libc/manual" },
    { "xna", "https://www.google.com/?gws_rd=ssl#q=%s%%20%%2b%%22microsoft.xna.framework%%22%%20site:msdn.microsoft.com" },
    { "o3d", "https://www.google.com/?gws_rd=ssl#q=%s+site:www.ogre3d.org/docs/api/1.9" },
    { "flickr", "https://www.flickr.com/search/?q=%s" },
    { "b", "http://www.google.com/cse?cx=011577717147771266991:jigzgqluebe&q=%s&oq=%s&gs_l=partner.3...6522.7336.0.7513.0.0.0.0.0.0.0.0..0.0.gsnos%2Cn%3D13...0.816j142242j6..1ac.1.25.partner..0.0.0.#gsc.tab=0&gsc.q=%s" },
    { "qt", "http://doc.qt.io/qt-5/search-results.html?q=%s" },
    { "ak", "https://developer.apple.com/search/?q=%s&platform=OS%%20X" },
    { "uk", "https://developer.apple.com/search/?q=%s&platform=iOS" },
    { "gf", "http://forums.gentoo.org/search.php?search_keywords=%s&show_results=topics" },
    { "ogles", "https://www.google.com/?gws_rd=ssl#q=%s+site:https://www.khronos.org/opengles/sdk/docs/man3" },
    { "ogles2", "https://www.google.com/?gws_rd=ssl#q=%s+site:https://www.khronos.org/opengles/sdk/docs/man/" },
    { "ogles3", "https://www.google.com/?gws_rd=ssl#q=%s+site:https://www.khronos.org/opengles/sdk/docs/man3" },
    { "ss", "http://www.slideshare.net/search/slideshow?searchfrom=header&q=%s" },
    { "r", "https://www.google.com/?gws_rd=ssl#q=%s%20site:http://ruby-doc.org/" },
    { "ruby", "https://www.google.com/?gws_rd=ssl#q=%s%20site:http://ruby-doc.org/" },
};

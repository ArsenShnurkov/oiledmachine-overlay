diff -u surf-0.6.orig/config.def.h surf-0.6/config.def.h
--- surf-0.6.orig/config.def.h	2014-06-21 16:23:46.195465854 +0000
+++ surf-0.6/config.def.h	2014-06-21 16:30:08.173459739 +0000
@@ -52,44 +52,44 @@
  */
 static Key keys[] = {
     /* modifier	            keyval      function    arg             Focus */
-    { MODKEY|GDK_SHIFT_MASK,GDK_r,      reload,     { .b = TRUE } },
-    { MODKEY,               GDK_r,      reload,     { .b = FALSE } },
-    { MODKEY|GDK_SHIFT_MASK,GDK_p,      print,      { 0 } },
-
-    { MODKEY,               GDK_p,      clipboard,  { .b = TRUE } },
-    { MODKEY,               GDK_y,      clipboard,  { .b = FALSE } },
-
-    { MODKEY|GDK_SHIFT_MASK,GDK_j,      zoom,       { .i = -1 } },
-    { MODKEY|GDK_SHIFT_MASK,GDK_k,      zoom,       { .i = +1 } },
-    { MODKEY|GDK_SHIFT_MASK,GDK_q,      zoom,       { .i = 0  } },
-    { MODKEY,               GDK_minus,  zoom,       { .i = -1 } },
-    { MODKEY,               GDK_plus,   zoom,       { .i = +1 } },
-
-    { MODKEY,               GDK_l,      navigate,   { .i = +1 } },
-    { MODKEY,               GDK_h,      navigate,   { .i = -1 } },
-
-    { MODKEY,               GDK_j,           scroll_v,   { .i = +1 } },
-    { MODKEY,               GDK_k,           scroll_v,   { .i = -1 } },
-    { MODKEY,               GDK_b,           scroll_v,   { .i = -10000 } },
-    { MODKEY,               GDK_space,       scroll_v,   { .i = +10000 } },
-    { MODKEY,               GDK_i,           scroll_h,   { .i = +1 } },
-    { MODKEY,               GDK_u,           scroll_h,   { .i = -1 } },
-
-    { 0,                    GDK_F11,    fullscreen, { 0 } },
-    { 0,                    GDK_Escape, stop,       { 0 } },
-    { MODKEY,               GDK_o,      source,     { 0 } },
-    { MODKEY|GDK_SHIFT_MASK,GDK_o,      inspector,  { 0 } },
-
-    { MODKEY,               GDK_g,      spawn,      SETPROP("_SURF_URI", "_SURF_GO") },
-    { MODKEY,               GDK_f,      spawn,      SETPROP("_SURF_FIND", "_SURF_FIND") },
-    { MODKEY,               GDK_slash,  spawn,      SETPROP("_SURF_FIND", "_SURF_FIND") },
-
-    { MODKEY,               GDK_n,      find,       { .b = TRUE } },
-    { MODKEY|GDK_SHIFT_MASK,GDK_n,      find,       { .b = FALSE } },
-
-    { MODKEY|GDK_SHIFT_MASK,GDK_c,      toggle,     { .v = "enable-caret-browsing" } },
-    { MODKEY|GDK_SHIFT_MASK,GDK_i,      toggle,     { .v = "auto-load-images" } },
-    { MODKEY|GDK_SHIFT_MASK,GDK_s,      toggle,     { .v = "enable-scripts" } },
-    { MODKEY|GDK_SHIFT_MASK,GDK_v,      toggle,     { .v = "enable-plugins" } },
+    { MODKEY|GDK_SHIFT_MASK,GDK_KEY_r,      reload,     { .b = TRUE } },
+    { MODKEY,               GDK_KEY_r,      reload,     { .b = FALSE } },
+    { MODKEY|GDK_SHIFT_MASK,GDK_KEY_p,      print,      { 0 } },
+
+    { MODKEY,               GDK_KEY_p,      clipboard,  { .b = TRUE } },
+    { MODKEY,               GDK_KEY_y,      clipboard,  { .b = FALSE } },
+
+    { MODKEY|GDK_SHIFT_MASK,GDK_KEY_j,      zoom,       { .i = -1 } },
+    { MODKEY|GDK_SHIFT_MASK,GDK_KEY_k,      zoom,       { .i = +1 } },
+    { MODKEY|GDK_SHIFT_MASK,GDK_KEY_q,      zoom,       { .i = 0  } },
+    { MODKEY,               GDK_KEY_minus,  zoom,       { .i = -1 } },
+    { MODKEY,               GDK_KEY_plus,   zoom,       { .i = +1 } },
+
+    { MODKEY,               GDK_KEY_l,      navigate,   { .i = +1 } },
+    { MODKEY,               GDK_KEY_h,      navigate,   { .i = -1 } },
+
+    { MODKEY,               GDK_KEY_j,           scroll_v,   { .i = +1 } },
+    { MODKEY,               GDK_KEY_k,           scroll_v,   { .i = -1 } },
+    { MODKEY,               GDK_KEY_b,           scroll_v,   { .i = -10000 } },
+    { MODKEY,               GDK_KEY_space,       scroll_v,   { .i = +10000 } },
+    { MODKEY,               GDK_KEY_i,           scroll_h,   { .i = +1 } },
+    { MODKEY,               GDK_KEY_u,           scroll_h,   { .i = -1 } },
+
+    { 0,                    GDK_KEY_F11,    fullscreen, { 0 } },
+    { 0,                    GDK_KEY_Escape, stop,       { 0 } },
+    { MODKEY,               GDK_KEY_o,      source,     { 0 } },
+    { MODKEY|GDK_SHIFT_MASK,GDK_KEY_o,      inspector,  { 0 } },
+
+    { MODKEY,               GDK_KEY_g,      spawn,      SETPROP("_SURF_URI", "_SURF_GO") },
+    { MODKEY,               GDK_KEY_f,      spawn,      SETPROP("_SURF_FIND", "_SURF_FIND") },
+    { MODKEY,               GDK_KEY_slash,  spawn,      SETPROP("_SURF_FIND", "_SURF_FIND") },
+
+    { MODKEY,               GDK_KEY_n,      find,       { .b = TRUE } },
+    { MODKEY|GDK_SHIFT_MASK,GDK_KEY_n,      find,       { .b = FALSE } },
+
+    { MODKEY|GDK_SHIFT_MASK,GDK_KEY_c,      toggle,     { .v = "enable-caret-browsing" } },
+    { MODKEY|GDK_SHIFT_MASK,GDK_KEY_i,      toggle,     { .v = "auto-load-images" } },
+    { MODKEY|GDK_SHIFT_MASK,GDK_KEY_s,      toggle,     { .v = "enable-scripts" } },
+    { MODKEY|GDK_SHIFT_MASK,GDK_KEY_v,      toggle,     { .v = "enable-plugins" } },
 };
 
diff -u surf-0.6.orig/config.mk surf-0.6/config.mk
--- surf-0.6.orig/config.mk	2014-06-21 16:23:46.195465854 +0000
+++ surf-0.6/config.mk	2014-06-21 16:30:55.738458978 +0000
@@ -10,8 +10,8 @@
 X11INC = $(shell $(PKG_CONFIG) --cflags x11)
 X11LIB = $(shell $(PKG_CONFIG) --libs x11)
 
-GTKINC = $(shell $(PKG_CONFIG) --cflags gtk+-2.0 gthread-2.0 webkit-1.0)
-GTKLIB = $(shell $(PKG_CONFIG) --libs gtk+-2.0 gthread-2.0 webkit-1.0)
+GTKINC = $(shell $(PKG_CONFIG) --cflags gtk+-3.0 gthread-2.0 webkit2gtk-4.0)
+GTKLIB = $(shell $(PKG_CONFIG) --libs gtk+-3.0 gthread-2.0 webkit2gtk-4.0)
 
 # includes and libs
 INCS = -I. -I/usr/include $(X11INC) $(GTKINC)
diff -u surf-0.6.orig/surf.c surf-0.6/surf.c
--- surf-0.6.orig/surf.c	2014-06-21 16:23:46.195465854 +0000
+++ surf-0.6/surf.c	2014-06-21 16:38:20.274451862 +0000
@@ -27,6 +27,10 @@
 
 char *argv0;
 
+#if GTK_MAJOR_VERSION == 3
+#include <gtk/gtkx.h>
+#endif
+
 #define LENGTH(x)               (sizeof x / sizeof x[0])
 #define CLEANMASK(mask)		(mask & (MODKEY|GDK_SHIFT_MASK))
 #define COOKIEJAR_TYPE          (cookiejar_get_type ())
@@ -84,7 +88,7 @@
 static Display *dpy;
 static Atom atoms[AtomLast];
 static Client *clients = NULL;
-static GdkNativeWindow embed = 0;
+static Window embed = 0;
 static gboolean showxid = FALSE;
 static char winid[64];
 static gboolean usingproxy = 0;
@@ -153,6 +157,7 @@
 		gpointer d);
 static void progresschange(WebKitWebView *view, GParamSpec *pspec, Client *c);
 static void reload(Client *c, const Arg *arg);
+static void resize(GtkWidget *w, GtkAllocation *a, Client *c);
 static void scroll_h(Client *c, const Arg *arg);
 static void scroll_v(Client *c, const Arg *arg);
 static void scroll(GtkAdjustment *a, const Arg *arg);
@@ -410,17 +415,21 @@
 
 static void
 drawindicator(Client *c) {
+	double max;
 	gint width;
 	const char *uri;
+	cairo_t *cr;
 	char *colorname;
 	GtkWidget *w;
-	GdkGC *gc;
 	GdkColor fg;
+	GtkAllocation alloc;
 
+	max = 0xffff;
 	uri = geturi(c);
 	w = c->indicator;
-	width = c->progress * w->allocation.width / 100;
-	gc = gdk_gc_new(w->window);
+	gtk_widget_get_allocation(w, &alloc);
+	width = c->progress * alloc.width / 101;
+	cr = gdk_cairo_create(gtk_widget_get_window(w));
 	if(strstr(uri, "https://") == uri) {
 		if(usingproxy) {
 			colorname = c->sslfailed? progress_proxy_untrust :
@@ -438,13 +447,12 @@
 	}
 
 	gdk_color_parse(colorname, &fg);
-	gdk_gc_set_rgb_fg_color(gc, &fg);
-	gdk_draw_rectangle(w->window,
-			w->style->bg_gc[GTK_WIDGET_STATE(w)],
-			TRUE, 0, 0, w->allocation.width, w->allocation.height);
-	gdk_draw_rectangle(w->window, gc, TRUE, 0, 0, width,
-			w->allocation.height);
-	g_object_unref(gc);
+	cairo_rectangle(cr, 0, 0, alloc.width, alloc.height);
+	cairo_fill(cr);
+	cairo_set_source_rgb(cr, fg.red/max, fg.green/max, fg.blue/max);
+	cairo_rectangle(cr, 0, 0, width, alloc.height);
+	cairo_fill(cr);
+	cairo_destroy(cr);
 }
 
 static gboolean
@@ -480,7 +488,7 @@
 	unsigned long ldummy;
 	unsigned char *p = NULL;
 
-	XGetWindowProperty(dpy, GDK_WINDOW_XID(GTK_WIDGET(c->win)->window),
+	XGetWindowProperty(dpy, GDK_WINDOW_XID(gtk_widget_get_window(GTK_WIDGET(c->win))),
 			atoms[a], 0L, BUFSIZ, False, XA_STRING,
 			&adummy, &idummy, &ldummy, &ldummy, &p);
 	if(p)
@@ -769,8 +777,8 @@
 	gtk_widget_show(c->win);
 	gtk_window_set_geometry_hints(GTK_WINDOW(c->win), NULL, &hints,
 			GDK_HINT_MIN_SIZE);
-	gdk_window_set_events(GTK_WIDGET(c->win)->window, GDK_ALL_EVENTS_MASK);
-	gdk_window_add_filter(GTK_WIDGET(c->win)->window, processx, c);
+	gdk_window_set_events(gtk_widget_get_window(GTK_WIDGET(c->win)), GDK_ALL_EVENTS_MASK);
+	gdk_window_add_filter(gtk_widget_get_window(GTK_WIDGET(c->win)), processx, c);
 	webkit_web_view_set_full_content_zoom(c->view, TRUE);
 
 	frame = webkit_web_view_get_main_frame(c->view);
@@ -819,8 +827,7 @@
 
 	if(showxid) {
 		gdk_display_sync(gtk_widget_get_display(c->win));
-		printf("%u\n",
-			(guint)GDK_WINDOW_XID(GTK_WIDGET(c->win)->window));
+		printf("%u\n", (guint)GDK_WINDOW_XID(gtk_widget_get_window(GTK_WIDGET(c->win))));
 		fflush(NULL);
                 if (fclose(stdout) != 0) {
 			die("Error closing stdout");
@@ -1001,9 +1008,9 @@
 static void
 setatom(Client *c, int a, const char *v) {
 	XSync(dpy, False);
-	XChangeProperty(dpy, GDK_WINDOW_XID(GTK_WIDGET(c->win)->window),
-			atoms[a], XA_STRING, 8, PropModeReplace,
-			(unsigned char *)v, strlen(v) + 1);
+	XChangeProperty(dpy, GDK_WINDOW_XID(gtk_widget_get_window(GTK_WIDGET(c->win))), atoms[a],
+ 			XA_STRING, 8, PropModeReplace, (unsigned char *)v,
+ 			strlen(v) + 1);
 }
 
 static void
@@ -1017,7 +1024,7 @@
 	sigchld(0);
 	gtk_init(NULL, NULL);
 
-	dpy = GDK_DISPLAY();
+	dpy = GDK_SCREEN_XDISPLAY(gdk_screen_get_default());
 
 	/* atoms */
 	atoms[AtomFind] = XInternAtom(dpy, "_SURF_FIND", False);
@@ -1162,7 +1169,7 @@
 static void
 updatewinid(Client *c) {
 	snprintf(winid, LENGTH(winid), "%u",
-			(int)GDK_WINDOW_XID(GTK_WIDGET(c->win)->window));
+			(int)GDK_WINDOW_XID(gtk_widget_get_window(GTK_WIDGET(c->win))));
 }
 
 static void
Only in surf-0.6: t.patch

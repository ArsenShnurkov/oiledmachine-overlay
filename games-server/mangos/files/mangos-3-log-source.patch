--- ./src/shared/Log.cpp.orig	2015-06-21 13:21:31.532784399 -0700
+++ ./src/shared/Log.cpp	2015-06-21 13:34:36.831704737 -0700
@@ -74,7 +74,7 @@
 
 Log::Log() :
     raLogfile(NULL), logfile(NULL), gmLogfile(NULL), charLogfile(NULL),
-    dberLogfile(NULL), eventAiErLogfile(NULL), scriptErrLogFile(NULL), worldLogfile(NULL), m_colored(false), m_includeTime(false), m_gmlog_per_account(false), m_scriptLibName(NULL)
+    dberLogfile(NULL), elunaErrLogfile(NULL), eventAiErLogfile(NULL), scriptErrLogFile(NULL), worldLogfile(NULL), m_colored(false), m_includeTime(false), m_gmlog_per_account(false), m_scriptLibName(NULL)
 {
     Initialize();
 }
@@ -270,6 +270,7 @@
 
     charLogfile = openLogFile("CharLogFile", "CharLogTimestamp", "a");
     dberLogfile = openLogFile("DBErrorLogFile", NULL, "a");
+    elunaErrLogfile = openLogFile("ElunaErrorLogFile", NULL, "a");
     eventAiErLogfile = openLogFile("EventAIErrorLogFile", NULL, "a");
     raLogfile = openLogFile("RaLogFile", NULL, "a");
     worldLogfile = openLogFile("WorldLogFile", "WorldLogTimestamp", "a");
@@ -521,6 +522,81 @@
     }
 
     fflush(stderr);
+}
+
+void Log::outErrorEluna()
+{
+    if (m_includeTime)
+        outTime();
+
+    fprintf(stderr, "\n");
+
+    if (logfile)
+    {
+        outTimestamp(logfile);
+        fprintf(logfile, "ERROR Eluna\n");
+        fflush(logfile);
+    }
+
+    if (elunaErrLogfile)
+    {
+        outTimestamp(elunaErrLogfile);
+        fprintf(elunaErrLogfile, "\n");
+        fflush(elunaErrLogfile);
+    }
+
+    fflush(stderr);
+}
+
+void Log::outErrorEluna(const char* err, ...)
+{
+    if (!err)
+        return;
+
+    if (m_colored)
+        SetColor(false, m_colors[LogError]);
+
+    if (m_includeTime)
+        outTime();
+
+    va_list ap;
+
+    va_start(ap, err);
+    vutf8printf(stderr, err, &ap);
+    va_end(ap);
+
+    if (m_colored)
+        ResetColor(false);
+
+    fprintf(stderr, "\n");
+
+    if (logfile)
+    {
+        outTimestamp(logfile);
+        fprintf(logfile, "ERROR Eluna: ");
+
+        va_start(ap, err);
+        vfprintf(logfile, err, ap);
+        va_end(ap);
+
+        fprintf(logfile, "\n");
+        fflush(logfile);
+    }
+
+    if (elunaErrLogfile)
+    {
+        outTimestamp(elunaErrLogfile);
+
+        va_list ap;
+        va_start(ap, err);
+        vfprintf(elunaErrLogfile, err, ap);
+        va_end(ap);
+
+        fprintf(elunaErrLogfile, "\n");
+        fflush(elunaErrLogfile);
+    }
+
+    fflush(stderr);
 }
 
 void Log::outErrorEventAI()

diff -ur Urho3D-1.5.orig/Source/Urho3D/Physics/Constraint.cpp Urho3D-1.5/Source/Urho3D/Physics/Constraint.cpp
--- Urho3D-1.5.orig/Source/Urho3D/Physics/Constraint.cpp	2016-02-08 18:09:21.964517875 -0800
+++ Urho3D-1.5/Source/Urho3D/Physics/Constraint.cpp	2016-02-08 18:10:42.669617403 -0800
@@ -226,11 +226,13 @@
     {
     case CONSTRAINT_POINT:
     case CONSTRAINT_HINGE:
+	axis_ = axis;
         rotation_ = Quaternion(Vector3::FORWARD, axis);
         break;
 
     case CONSTRAINT_SLIDER:
     case CONSTRAINT_CONETWIST:
+	axis_ = axis;
         rotation_ = Quaternion(Vector3::RIGHT, axis);
         break;
 
@@ -268,11 +270,13 @@
     {
     case CONSTRAINT_POINT:
     case CONSTRAINT_HINGE:
+	otherAxis_ = axis;
         otherRotation_ = Quaternion(Vector3::FORWARD, axis);
         break;
 
     case CONSTRAINT_SLIDER:
     case CONSTRAINT_CONETWIST:
+	otherAxis_ = axis;
         otherRotation_ = Quaternion(Vector3::RIGHT, axis);
         break;
 
diff -ur Urho3D-1.5.orig/Source/Urho3D/Physics/Constraint.h Urho3D-1.5/Source/Urho3D/Physics/Constraint.h
--- Urho3D-1.5.orig/Source/Urho3D/Physics/Constraint.h	2016-02-08 18:09:21.964517875 -0800
+++ Urho3D-1.5/Source/Urho3D/Physics/Constraint.h	2016-02-08 18:12:06.891851892 -0800
@@ -78,12 +78,14 @@
     void SetRotation(const Quaternion& rotation);
     /// Set constraint rotation relative to own body by specifying the axis.
     void SetAxis(const Vector3& axis);
+    Vector3 GetAxis() const { return axis_; } //placeholder
     /// Set constraint position relative to the other body. If connected to the static world, is a world space position.
     void SetOtherPosition(const Vector3& position);
     /// Set constraint rotation relative to the other body. If connected to the static world, is a world space rotation.
     void SetOtherRotation(const Quaternion& rotation);
     /// Set constraint rotation relative to the other body by specifying the axis.
     void SetOtherAxis(const Vector3& axis);
+    Vector3 GetOtherAxis() const { return otherAxis_; } //placeholder
     /// Set constraint world space position. Resets both own and other body relative position, ie. zeroes the constraint error.
     void SetWorldPosition(const Vector3& position);
     /// Set high limit. Interpretation is constraint type specific.
@@ -175,6 +177,8 @@
     Vector3 position_;
     /// Constraint rotation.
     Quaternion rotation_;
+    Vector3 axis_; //placeholder
+    Vector3 otherAxis_; //placeholder
     /// Constraint other body position.
     Vector3 otherPosition_;
     /// Constraint other body axis.

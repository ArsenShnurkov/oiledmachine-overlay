diff -ur Urho3D-1.5.orig/Source/Urho3D/UI/Text3D.cpp Urho3D-1.5/Source/Urho3D/UI/Text3D.cpp
--- Urho3D-1.5.orig/Source/Urho3D/UI/Text3D.cpp	2016-02-10 00:06:03.877345848 -0800
+++ Urho3D-1.5/Source/Urho3D/UI/Text3D.cpp	2016-02-10 00:08:51.299797178 -0800
@@ -419,6 +419,16 @@
     return text_.GetColor(corner);
 }
 
+void Text3D::SetCorner(Corner corner)
+{
+    this->corner_ = corner;
+}
+
+Corner Text3D::GetCorner() const
+{
+    return this->corner_;
+}
+
 float Text3D::GetOpacity() const
 {
     return text_.GetOpacity();
diff -ur Urho3D-1.5.orig/Source/Urho3D/UI/Text3D.h Urho3D-1.5/Source/Urho3D/UI/Text3D.h
--- Urho3D-1.5.orig/Source/Urho3D/UI/Text3D.h	2016-02-10 00:06:03.877345848 -0800
+++ Urho3D-1.5/Source/Urho3D/UI/Text3D.h	2016-02-10 00:09:50.642082936 -0800
@@ -86,6 +86,8 @@
     void SetColor(const Color& color);
     /// Set color on one corner.
     void SetColor(Corner corner, const Color& color);
+    void SetCorner(Corner corner); //placeholder
+    Corner GetCorner() const; //placeholder
     /// Set opacity.
     void SetOpacity(float opacity);
     /// Set how the text should rotate in relation to the camera. Default is to not rotate (FC_NONE.)
@@ -187,6 +189,7 @@
     bool usingSDFShader_;
     /// Font texture data lost flag.
     bool fontDataLost_;
+    Corner corner_;
 };
 
 }

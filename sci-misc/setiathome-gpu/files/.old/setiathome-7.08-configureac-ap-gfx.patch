--- AP/client/configure.ac.orig	2015-12-03 11:46:19.131494914 -0800
+++ AP/client/configure.ac	2015-12-03 11:48:43.607914090 -0800
@@ -309,45 +309,45 @@
 AC_SUBST([APP_LDFLAGS])
 AC_SUBST([APP_CFLAGS])
 
-#if test "$enable_graphics" = yes ; then
-#  SAH_GRX_LIBS
-#  AX_CHECK_GL
-#  AX_CHECK_GLU
-#  AX_CHECK_GLUT
-#  if test "$no_gl" = yes -o "$no_glu" = yes -o "$no_glut" = yes ; then
-#     have_glut=no
-#     enable_graphics=no
-#     AC_MSG_WARN([
-#================================================================================
-#WARNING: GL/GLU/GLUT not found.
-#
-#The GL, GLU, and GLUT libraries are required in order to build the graphical
-#parts of the BOINC application API library.
-#
-#==> only building non-graphical parts of the BOINC API Library for now.
-#
-#================================================================================
-#       ])
-#else
-#     AC_DEFINE([BOINC_APP_GRAPHICS],1,[Define to 1 to build a graphical application])
-#     SAH_GRX_INCLUDES
-#     GRAPHICS_CFLAGS="${GRX_CFLAGS} ${GL_CFLAGS} ${GLU_CFLAGS} ${GLUT_CFLAGS}"
-#     GRAPHICS_LIBS="${GL_LIBS} ${GLU_LIBS} ${GLUT_LIBS} ${GRX_LIBS} -ljpeg"
-#
-#case ${target} in
-#        powerpc-apple*)       GRAPHICS_LIBS="${GRAPHICS_LIBS} -framework AppKit -framework CoreServices"
-#        ;;
-#esac
-#      GRAPHICS_LIBS_RAW="${PTHREAD_CFLAGS} -L${BOINCDIR}/api -L${BOINCDIR}/lib -lboinc_graphics2 -lboinc ${GRAPHICS_LIBS}"
-#dnl     SAH_RAW_LDFLAGS(["${PTHREAD_CFLAGS} -L${BOINCDIR}/api -L${BOINCDIR}/lib -lboinc_graphics2 -lboinc ${GRAPHICS_LIBS}"],[GRAPHICS_LIBS_RAW])
-#     have_glut=yes
-#     enable_graphics=yes
-#  fi
-#fi
+if test "$enable_graphics" = yes ; then
+  SAH_GRX_LIBS
+  AX_CHECK_GL
+  AX_CHECK_GLU
+  AX_CHECK_GLUT
+  if test "$no_gl" = yes -o "$no_glu" = yes -o "$no_glut" = yes ; then
+     have_glut=no
+     enable_graphics=no
+     AC_MSG_WARN([
+================================================================================
+WARNING: GL/GLU/GLUT not found.
+
+The GL, GLU, and GLUT libraries are required in order to build the graphical
+parts of the BOINC application API library.
+
+==> only building non-graphical parts of the BOINC API Library for now.
+
+================================================================================
+       ])
+else
+     AC_DEFINE([BOINC_APP_GRAPHICS],1,[Define to 1 to build a graphical application])
+     SAH_GRX_INCLUDES
+     GRAPHICS_CFLAGS="${GRX_CFLAGS} ${GL_CFLAGS} ${GLU_CFLAGS} ${GLUT_CFLAGS}"
+     GRAPHICS_LIBS="${GL_LIBS} ${GLU_LIBS} ${GLUT_LIBS} ${GRX_LIBS} -ljpeg"
+
+case ${target} in
+        powerpc-apple*)       GRAPHICS_LIBS="${GRAPHICS_LIBS} -framework AppKit -framework CoreServices"
+        ;;
+esac
+      GRAPHICS_LIBS_RAW="${PTHREAD_CFLAGS} -L${BOINCDIR}/api -L${BOINCDIR}/lib -lboinc_graphics2 -lboinc ${GRAPHICS_LIBS}"
+dnl     SAH_RAW_LDFLAGS(["${PTHREAD_CFLAGS} -L${BOINCDIR}/api -L${BOINCDIR}/lib -lboinc_graphics2 -lboinc ${GRAPHICS_LIBS}"],[GRAPHICS_LIBS_RAW])
+     have_glut=yes
+     enable_graphics=yes
+  fi
+fi
 AC_SUBST([LDSTATIC])
-#AC_SUBST([GRAPHICS_CFLAGS])
-#AC_SUBST([GRAPHICS_LIBS])
-#AC_SUBST([GRAPHICS_LIBS_RAW])
+AC_SUBST([GRAPHICS_CFLAGS])
+AC_SUBST([GRAPHICS_LIBS])
+AC_SUBST([GRAPHICS_LIBS_RAW])
 
 AC_CACHE_SAVE
 
@@ -525,16 +525,16 @@
 #endif
 ])
 
-#AM_CONDITIONAL(USE_MY_IMAGELIBS, [false])
-#AM_CONDITIONAL(USE_MY_GLUT, [false])
+AM_CONDITIONAL(USE_MY_IMAGELIBS, [false])
+AM_CONDITIONAL(USE_MY_GLUT, [false])
 AM_CONDITIONAL(ENABLE_CLIENT, [test "${enable_client}" = yes])
-#AM_CONDITIONAL(ENABLE_GUI, [test "${enable_graphics}" = yes])
+AM_CONDITIONAL(ENABLE_GUI, [test "${enable_graphics}" = yes])
 AM_CONDITIONAL(OPENCL, [test "`echo ${CPPFLAGS} | grep -Fe USE_OPENCL`"])
 AM_CONDITIONAL(LINUX, [test -n "`echo ${target} | grep linux`"])
 AM_CONDITIONAL(DARWIN, [test -n "`echo ${target} | grep darwin`"])
 AM_CONDITIONAL(I386, [test -n "`echo ${target} | grep i.86`"])
 AM_CONDITIONAL(X86_64, [test -n "`echo ${target} | grep 'x86_64'`"])
-#AM_CONDITIONAL(PPC, [test -n "`echo ${target} | grep 'powerpc'`" -o -n "`echo ${target} | grep 'ppc'`" ])
+AM_CONDITIONAL(PPC, [test -n "`echo ${target} | grep 'powerpc'`" -o -n "`echo ${target} | grep 'ppc'`" ])
 AM_CONDITIONAL(AVX, [test "x${have_avx}" = "xyes"])
 if test "x${avx_type}" != "x" ; then
   AC_DEFINE_UNQUOTED([AVX_MASKSTORE_TYPECAST(x)],[reinterpret_cast<$avx_type>(x)],

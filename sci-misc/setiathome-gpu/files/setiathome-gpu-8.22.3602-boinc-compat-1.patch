diff -urp setiathome-gpu-8.22.orig/AKv8/client/analyzePoT.cpp setiathome-gpu-8.22/AKv8/client/analyzePoT.cpp
--- setiathome-gpu-8.22.orig/AKv8/client/analyzePoT.cpp	2017-01-19 20:00:52.213331726 -0800
+++ setiathome-gpu-8.22/AKv8/client/analyzePoT.cpp	2017-01-19 20:09:43.906802563 -0800
@@ -401,7 +401,7 @@ inline void ConfigurePulseFindGeometry(s
 	if( (localThreads[2]*single_period_size)>host.GetSingleAllocSize() ){
 		fprintf(stderr,"ERROR: Available memory buffer of %.4gMB too small for PulseFind (%.4gMB required), increase  -sbs N value; exiting...\n",
 			(host.GetSingleAllocSize()/(1024.*1024.)), (localThreads[2]*single_period_size/(1024.*1024)) );
-		boinc_temporary_exit(300,"too small -sbs N value",true);
+		boinc_temporary_exit(300,"too small -sbs N value");
 	}
 	globalThreads[2]=localThreads[2];
 
diff -urp setiathome-gpu-8.22.orig/AKv8/client/analyzeReport.cpp setiathome-gpu-8.22/AKv8/client/analyzeReport.cpp
--- setiathome-gpu-8.22.orig/AKv8/client/analyzeReport.cpp	2017-01-19 20:00:51.321297374 -0800
+++ setiathome-gpu-8.22/AKv8/client/analyzeReport.cpp	2017-01-19 20:08:59.282084784 -0800
@@ -150,7 +150,7 @@ int result_spike(SPIKE_INFO &si) {
 
   int retval=0;
   //R: sanity check for found result
-  if(si.s.peak_power > si.s.fft_len){boinc_temporary_exit(5*60,"Suspicious spike results, host needs reboot or maintenance",true);}
+  if(si.s.peak_power > si.s.fft_len){boinc_temporary_exit(5*60,"Suspicious spike results, host needs reboot or maintenance");}
 
   if (!swi.analysis_cfg.autocorr_fftlen && signal_count >= swi.analysis_cfg.max_signals) {
 		retval=RESULT_OVERFLOW;
@@ -265,7 +265,7 @@ int result_gaussian(GAUSS_INFO &gi) {
 
   //R: sanity check for found result
   if(gi.g.peak_power > swi.analysis_cfg.gauss_pot_length){
-		boinc_temporary_exit(5*60,"Suspicious gaussian results, host needs reboot or maintenance",true);
+		boinc_temporary_exit(5*60,"Suspicious gaussian results, host needs reboot or maintenance");
 	}
 
   if (!swi.analysis_cfg.autocorr_fftlen && signal_count >= swi.analysis_cfg.max_signals) {
@@ -342,7 +342,7 @@ BOINCASSERT(_CrtCheckMemory());
 #endif
 
   //JWS: sanity check for found result.
-  if(Power > (float)pot_len){boinc_temporary_exit(5*60,"Triplet data corruption, retry from checkpoint.",true);}
+  if(Power > (float)pot_len){boinc_temporary_exit(5*60,"Triplet data corruption, retry from checkpoint.");}
 
   if (!inv) inv = (int*)calloc_a(swi.analysis_cfg.triplet_pot_length, sizeof(int), MEM_ALIGN);
 
@@ -591,7 +591,7 @@ BOINCASSERT(_CrtCheckMemory());
 
   //R: sanity check for found result
   //JWS: Revised to tighter check, moved up so it will take effect when an impossible pulse is first seen.
-  if(PulsePower > 1.4 * period){boinc_temporary_exit(5*60,"Suspicious pulse results, host needs reboot or maintenance",true);}
+  if(PulsePower > 1.4 * period){boinc_temporary_exit(5*60,"Suspicious pulse results, host needs reboot or maintenance");}
 
 
   if (write_pulse) {

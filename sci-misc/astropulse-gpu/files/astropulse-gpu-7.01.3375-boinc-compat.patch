diff -urp astropulse-gpu-7.01.orig/AP/client/ap_client_main.cpp astropulse-gpu-7.01/AP/client/ap_client_main.cpp
--- astropulse-gpu-7.01.orig/AP/client/ap_client_main.cpp	2017-01-19 19:27:37.705468495 -0800
+++ astropulse-gpu-7.01/AP/client/ap_client_main.cpp	2017-01-19 19:28:51.929267196 -0800
@@ -499,7 +499,7 @@ void Astropulse::Client::SignalSanityChe
 				cur_fft_num=signal_vector[i].fft_num; cur_dm=signal_vector[i].dm; cur_scale=signal_vector[i].scale; 
 				peak_sum=signal_vector[i].peak_power;
 			}
-			if(peak_sum>SingleLim)boinc_temporary_exit(30,"WARNING: Single pulse sanity check failed. Possible computation device issue, atempting to reprocess...",true);
+			if(peak_sum>SingleLim)boinc_temporary_exit(30,"WARNING: Single pulse sanity check failed. Possible computation device issue, atempting to reprocess...");
 		} else {
 			if(signal_vector[i].scale==state.fold_level_small) {
 				if(signal_vector[i].ffa_scale==cur_ffa_scale && signal_vector[i].period==cur_period)
@@ -509,7 +509,7 @@ void Astropulse::Client::SignalSanityChe
 					peak_sum=signal_vector[i].peak_power;
 				}
 				if(peak_sum>ShortLim)
-					boinc_temporary_exit(30,"WARNING: Short rep pulse sanity check failed. Possible computation device issue, atempting to reprocess...",true);
+					boinc_temporary_exit(30,"WARNING: Short rep pulse sanity check failed. Possible computation device issue, atempting to reprocess...");
 			}
 			if(signal_vector[i].scale==state.fold_level_large) {
 				if(signal_vector[i].ffa_scale==cur_ffa_scale && signal_vector[i].period==cur_period)
@@ -519,7 +519,7 @@ void Astropulse::Client::SignalSanityChe
 					peak_sum=signal_vector[i].peak_power;
 				}
 				if(peak_sum>LongLim)
-					boinc_temporary_exit(30,"WARNING: Long rep pulse sanity check failed. Possible computation device issue, atempting to reprocess...",true);
+					boinc_temporary_exit(30,"WARNING: Long rep pulse sanity check failed. Possible computation device issue, atempting to reprocess...");
 			}
                 }
 	}
diff -urp astropulse-gpu-7.01.orig/sah_v7_opt/src/GPU_lock.cpp astropulse-gpu-7.01/sah_v7_opt/src/GPU_lock.cpp
--- astropulse-gpu-7.01.orig/sah_v7_opt/src/GPU_lock.cpp	2017-01-19 19:27:32.121257946 -0800
+++ astropulse-gpu-7.01/sah_v7_opt/src/GPU_lock.cpp	2017-01-19 19:28:54.360358868 -0800
@@ -487,7 +487,7 @@ convertToString(const char *filename)
 		{
 			f.close();
 			fprintf(stderr,"ERROR: can't allocate mem for CL file, exiting...\n");
-			boinc_temporary_exit(300,"Can't read CL file",true);
+			boinc_temporary_exit(300,"Can't read CL file");
 		}
 #undef read
 		f.read(str, fileSize);
@@ -499,7 +499,7 @@ convertToString(const char *filename)
 		return s;
 	}
 	fprintf(stderr,"ERROR: can't open CL file, exiting...\n");
-	boinc_temporary_exit(300,"Can't read CL file",true);
+	boinc_temporary_exit(300,"Can't read CL file");
 
 }
 
@@ -759,7 +759,7 @@ FROMSRC:
                 fprintf(stderr, "CL file build log on device %s\n", devicename);
                 fprintf(stderr, "%s\n", build_log);
                 free(build_log);
-				boinc_temporary_exit(180,"CL file build failure",true);
+				boinc_temporary_exit(180,"CL file build failure");
 	}
 
 	//R: extract binary and save it to file
diff -urp astropulse-gpu-7.01.orig/src/GPU_lock.cpp astropulse-gpu-7.01/src/GPU_lock.cpp
--- astropulse-gpu-7.01.orig/src/GPU_lock.cpp	2017-01-19 19:27:30.877211040 -0800
+++ astropulse-gpu-7.01/src/GPU_lock.cpp	2017-01-19 19:28:54.361358906 -0800
@@ -487,7 +487,7 @@ convertToString(const char *filename)
 		{
 			f.close();
 			fprintf(stderr,"ERROR: can't allocate mem for CL file, exiting...\n");
-			boinc_temporary_exit(300,"Can't read CL file",true);
+			boinc_temporary_exit(300,"Can't read CL file");
 		}
 #undef read
 		f.read(str, fileSize);
@@ -499,7 +499,7 @@ convertToString(const char *filename)
 		return s;
 	}
 	fprintf(stderr,"ERROR: can't open CL file, exiting...\n");
-	boinc_temporary_exit(300,"Can't read CL file",true);
+	boinc_temporary_exit(300,"Can't read CL file");
 
 }
 
@@ -759,7 +759,7 @@ FROMSRC:
                 fprintf(stderr, "CL file build log on device %s\n", devicename);
                 fprintf(stderr, "%s\n", build_log);
                 free(build_log);
-				boinc_temporary_exit(180,"CL file build failure",true);
+				boinc_temporary_exit(180,"CL file build failure");
 	}
 
 	//R: extract binary and save it to file
